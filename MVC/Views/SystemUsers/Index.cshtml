@model IEnumerable<MVC.Models.SystemUser>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="content-wrapper">
    <section class="content-header">
        <h1>Admins <small>Control panel</small></h1>
        <div class="add-button">
            <button class="btn btn-primary" onclick="show_add()"><i class="fa fa-plus" aria-hidden="true"></i> Add More</button>
        </div>
    </section>
    <section class="content">
        <div class="row">
            <!-- left column -->
            <div class="col-md-12">
                <!-- general form elements -->
                <div class="box box-primary">
                    <div class="box-header with-border">
                        <h3 class="box-title">System Users</h3>
                    </div>
                    <!-- /.box-header -->
                    <div class="box-body">
                        <table class="table table-striped table-bordered" id="user-table">
                            <thead>
                                <tr>
                                    <th>
                                        @Html.DisplayNameFor(model => model.FullName)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.Email)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.UpdateDate)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.Status)
                                    </th>
                                    <th>
                                        Updated By
                                    </th>
                                    <th>
                                        Action
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model)
                                {
                                <tr>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.FullName)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Email)
                                    </td>
                                    <td>
                                        @if (item.UpdateDate.HasValue)
                                            {
                                            @item.UpdateDate.Value.ToString("MMM dd, yyyy - hh:mm tt")
                                            }
                                            else
                                            {
                                            @Html.Raw(string.Format("N/A"))
                                            }
                                    </td>
                                    <td>
                                        @if (item.Status == 1)
                                            {
                                            @Html.Raw(string.Format("Active"))
                                            }
                                                else
                                                {
                                            @Html.Raw(string.Format("Inactive"))
                                                    }
                                    </td>
                                    <td>
                                        @if (item.UpdatedBy.HasValue)
                                            {
                                            @Html.DisplayFor(modelItem => item.SystemUser1.Email)
                                            }
                                            else
                                            {
                                            @Html.Raw(string.Format("N/A"))
                                            }
                                    </td>
                                    <td>
                                        @Html.Raw(string.Format("<label class='label label-primary' onclick='UpdateModel(" + item.Id + ")'>Update</label> <label class='label label-primary' onclick='ShowTasks(" + item.Id + ")'>Tasks</label>"))
                                    </td>
                                </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </section>
</div>

<div id="addModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Add User</h4>
            </div>
            <form class="form-horizontal" id="add-form">
                <div class="modal-body">
                    <fieldset>
                        @Html.AntiForgeryToken()

                        <div class="form-group" style="text-align:center">
                            <img id="img-add" class="image img-view" src="~/Content/Images/Users/user.png"/>
                        </div>
                        <div class="form-group">
                            <label class="col-md-3 control-label">Image</label>
                            <div class="col-md-8 inputGroupContainer">
                                <div class="input-group">
                                    <span class="btn btn-default btn-file">
                                        Browse Image <input type="file" name="Image" id="image-add">
                                    </span>
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-md-3 control-label">Full Name</label>
                            <div class="col-md-8 inputGroupContainer">
                                <div class="input-group">
                                    <span class="input-group-addon"><i class="glyphicon glyphicon-user"></i></span>
                                    <input name="FullName" placeholder="Full Name" class="form-control" type="text">
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-md-3 control-label">E-mail</label>
                            <div class="col-md-8 inputGroupContainer">
                                <div class="input-group">
                                    <span class="input-group-addon"><i class="glyphicon glyphicon-user"></i></span>
                                    <input name="Email" placeholder="E-mail" class="form-control" type="email">
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-md-3 control-label">Password</label>
                            <div class="col-md-8 inputGroupContainer">
                                <div class="input-group">
                                    <span class="input-group-addon"><i class="glyphicon glyphicon-user"></i></span>
                                    <input name="Password" placeholder="Password" class="form-control" type="text">
                                </div>
                            </div>
                        </div>
                    </fieldset>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" id="add-button">Save</button>
                </div>
            </form>
        </div>

    </div>
</div>

<script>
    $(document).ready(function () {
        var table = $('#user-table').dataTable().fnSort([[3, 'asc'], [0, 'asc']]);
    });

    function UpdateModel(id) {
        console.log(id);
    }

    function show_add() {
        $('#addModal').modal('show');
    }

    $(document).ready(function () {
        $("#add-button").click(function () {

            var validator = $('#add-form').data('bootstrapValidator');
            validator.validate();
            if (validator.isValid()) {

                var data1 = $('#add-form').serialize();
                $.ajax({
                    type: "POST",
                    url: '/SystemUsers/Create',
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    data: data1,
                    success: function (x) {
                        console.log(x);
                    }
                });
            }
            else {
                return false;
            }
        });

        var validate = $('#add-form').bootstrapValidator({
            feedbackIcons: {
                valid: 'glyphicon glyphicon-ok',
                invalid: 'glyphicon glyphicon-remove',
                validating: 'glyphicon glyphicon-refresh'
            },
            fields: {
                FullName: {
                    validators: {
                        stringLength: {
                            min: 5,
                        },
                        notEmpty: {
                            message: 'Please supply your full name'
                        }
                    }
                },

                Image: {
                    validators: {
                        file: {
                            extension: 'jpeg,jpg,png',
                            type: 'image/jpeg,image/png',
                            message: 'Invalid image type. Please supply jpeg/jpg or png type image.'
                        }
                    }
                },

                Email: {
                    validators: {
                        stringLength: {
                            min: 5,
                        },
                        notEmpty: {
                            message: 'Please supply your user name'
                        }
                    }
                },
                Password: {
                    validators: {
                        stringLength: {
                            min: 8,
                        },
                        notEmpty: {
                            message: 'Please supply your password'
                        }
                    }
                },
            }
        })
        .on('success.form.bv', function (e) {
                $('#success_message').slideDown({ opacity: "show" }, "slow") // Do something ...
                $('#reg_form').data('bootstrapValidator').resetForm();
                e.preventDefault();
                var $form = $(e.target);
                var bv = $form.data('bootstrapValidator');
                $.post($form.attr('action'), $form.serialize(), function (result) {
                    console.log(result);
                }, 'json');
            });
    });

    function readURL(input) {
        if (input.files && input.files[0]) {
            var reader = new FileReader();
            reader.onload = function (e) {
                $('#img-add').attr('src', e.target.result);
            }
            reader.readAsDataURL(input.files[0]);
        }
    }

    $("#image-add").change(function () {
        readURL(this);
    });


</script>